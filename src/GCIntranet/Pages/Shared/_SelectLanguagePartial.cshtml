@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options

@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocOptions

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocOptions.Value.SupportedUICultures
        .Select(c => new SelectListItem { Value = c.Name, Text = c.NativeName })
        .ToList();
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}
<section id="wb-lng">
    <h2>@Localizer["Language selection"]</h2>
    <ul class="list-inline">
        @{
            var nativeName = requestCulture.RequestCulture.UICulture.NativeName;

            foreach (var culture in cultureItems)
            {
                if (nativeName == culture.Text)
                {
                    continue;
                }
                <li><a asp-page="SplashPage" asp-route-culture="@culture.Value" asp-route-returnUrl="@returnUrl" lang="@culture.Value">@culture.Text</a></li>
            }
        }
    </ul>
</section>